(*
https://adventofcode.com/2020/day/20
*)

open Printf
open Batteries

let input_test = [
    (2311, [
        "..##.#..#.";
        "##..#.....";
        "#...##..#.";
        "####.#...#";
        "##.##.###.";
        "##...#.###";
        ".#.#.#..##";
        "..#....#..";
        "###...#.#.";
        "..###..###";
    ]);
    (1951, [
        "#.##...##.";
        "#.####...#";
        ".....#..##";
        "#...######";
        ".##.#....#";
        ".###.#####";
        "###.##.##.";
        ".###....#.";
        "..#.#..#.#";
        "#...##.#..";
    ]);
    (1171, [
        "####...##.";
        "#..##.#..#";
        "##.#..#.#.";
        ".###.####.";
        "..###.####";
        ".##....##.";
        ".#...####.";
        "#.##.####.";
        "####..#...";
        ".....##...";
    ]);
    (1427, [
        "###.##.#..";
        ".#..#.##..";
        ".#.##.#..#";
        "#.#.#.##.#";
        "....#...##";
        "...##..##.";
        "...#.#####";
        ".#.####.#.";
        "..#..###.#";
        "..##.#..#.";
    ]);
    (1489, [
        "##.#.#....";
        "..##...#..";
        ".##..##...";
        "..#...#...";
        "#####...#.";
        "#..#.#.#.#";
        "...#.#.#..";
        "##.#...##.";
        "..##.##.##";
        "###.##.#..";
    ]);
    (2473, [
        "#....####.";
        "#..#.##...";
        "#.##..#...";
        "######.#.#";
        ".#...#.#.#";
        ".#########";
        ".###.#..#.";
        "########.#";
        "##...##.#.";
        "..###.#.#.";
    ]);
    (2971, [
        "..#.#....#";
        "#...###...";
        "#.#.###...";
        "##.##..#..";
        ".#####..##";
        ".#..####.#";
        "#..#.#..#.";
        "..####.###";
        "..#.#.###.";
        "...#.#.#.#";
    ]);
    (2729, [
        "...#.#.#.#";
        "####.#....";
        "..#.#.....";
        "....#..#.#";
        ".##..##.#.";
        ".#.####...";
        "####.#.#..";
        "##.####...";
        "##..#.##..";
        "#.##...##.";
    ]);
    (3079, [
        "#.#.#####.";
        ".#..######";
        "..#.......";
        "######....";
        "####.#..#.";
        ".#...#.##.";
        "#.#####.##";
        "..#.###...";
        "..#.......";
        "..#.###...";
    ]);];;

let input = [
    (3041, [
        "#..##.#...";
        "..#....###";
        ".#..#.#.##";
        "..#.......";
        "#.#..###.#";
        ".#....#..#";
        ".........#";
        "#...##.###";
        "#.....###.";
        "...##..#..";
    ]);
    (1747, [
        "##..######";
        "#####...##";
        "..#.....##";
        "#...##.###";
        "#........#";
        "###.#..#.#";
        "#.##...#..";
        "#..#.....#";
        "#.#..#...#";
        "#.#.#..###";
    ]);
    (2887, [
        "##....#..#";
        "##....#...";
        "#...#..#..";
        "...###.#..";
        ".....#.##.";
        ".....#....";
        "##.##....#";
        "#.......#.";
        "###....##.";
        "##..##.#.#";
    ]);
    (3001, [
        "##.#.#.#..";
        "##...####.";
        "##....#.##";
        "....##....";
        ".......##.";
        "#..#..#...";
        "###..#.#.#";
        "###....###";
        "####...###";
        "##..##.#.#";
    ]);
    (2267, [
        "##.#.#.###";
        "##....#..#";
        "#..#....#.";
        "..#.##..#.";
        "##..#..#..";
        "...#......";
        "#.#.#.....";
        "##........";
        "...#.#..##";
        "..##.#..#.";
    ]);
    (2797, [
        "#.##.#...#";
        ".......#..";
        "#....#....";
        "##..##.#.#";
        "#......##.";
        ".#.##.#.##";
        "#......##.";
        "####....#.";
        "#.##....#.";
        "####.#.###";
    ]);
    (1087, [
        "#.#######.";
        "##..##..#.";
        "#.......##";
        ".....#....";
        "##...#...#";
        "#....#...#";
        ".##......#";
        ".#..#.#..#";
        "#...#..##.";
        ".##..##.##";
    ]);
    (2237, [
        ".#..####..";
        "...####.##";
        "##...#..#.";
        "#..#.#...#";
        "##.#......";
        ".##.#..#.#";
        ".#..##...#";
        "...#....##";
        ".....##...";
        ".....##..#";
    ]);
    (3673, [
        "##.###...#";
        "#.##..#..#";
        "#..####...";
        ".#.####...";
        ".....#.#.#";
        "#..#..#...";
        "###.......";
        "#.#.......";
        "#.......#.";
        "##..###..#";
    ]);
    (1907, [
        "...#.#.###";
        "#.##.....#";
        ".......##.";
        ".##.#...#.";
        "..#.##....";
        "##..##....";
        "#.........";
        "##.#......";
        ".......#..";
        "#.#.###...";
    ]);
    (2437, [
        "#.##.##..#";
        "....#.....";
        "..#......#";
        "#...#.....";
        "...#......";
        ".....#...#";
        "#.#.......";
        ".#...#...#";
        "#.#....#..";
        ".##..##...";
    ]);
    (2897, [
        "##..#...#.";
        "..###....#";
        "...#.##...";
        "....#.##..";
        "...##.....";
        "#..#..#.##";
        "..###.....";
        "...##..##.";
        "#..#......";
        "#.#.##..#.";
    ]);
    (1103, [
        ".####.#..#";
        "..##...#..";
        "#.....#...";
        "##.#.....#";
        "#.##......";
        ".##...#..#";
        "##.....#.#";
        "##.....###";
        "#.....#...";
        "##.#...##.";
    ]);
    (1559, [
        "...##..#.#";
        "#..###...#";
        "...##...##";
        "#..#.#.#..";
        "#......#.#";
        "#..#.#.#.#";
        ".#..#....#";
        "....#..###";
        "..##..##..";
        ".#..##..##";
    ]);
    (3931, [
        "##....##.#";
        ".##..#...#";
        ".......#..";
        "#....#.#..";
        "#.#..##.#.";
        ".##.####..";
        ".......#.#";
        ".....#.#..";
        ".#.#......";
        "####..#.##";
    ]);
    (3331, [
        "#.#.####..";
        ".#.##...##";
        "....####.#";
        ".##......#";
        "#.##.##..#";
        "##..#...#.";
        "#.##....#.";
        "#.#.#.#.#.";
        "...#......";
        "###.##.##.";
    ]);
    (2089, [
        "..########";
        "##.#...##.";
        "#...#.....";
        "##......##";
        "##..##..#.";
        "..#.#....#";
        "#..##....#";
        "#..#.#...#";
        "##..#....#";
        "..######.#";
    ]);
    (1069, [
        ".####..###";
        "......##..";
        "....#.##.#";
        "#..#.....#";
        "#...#...#.";
        "#...#.##.#";
        "...#.#...#";
        "#.#.......";
        "#.#.##.#.#";
        "#..#.#.#..";
    ]);
    (1831, [
        "#..#..##..";
        "#...##...#";
        "..##...#.#";
        "#.......##";
        "#........#";
        "..#.......";
        "##..###..#";
        "#....###.#";
        "...#......";
        "##..#.....";
    ]);
    (1453, [
        ".#.#.#..##";
        "##.##...##";
        "#....#....";
        "#..#..#.#.";
        "##.#..###.";
        "...##.##..";
        "....##..##";
        "...##..###";
        "##........";
        "..##.#####";
    ]);
    (3767, [
        "..#.#.#.#.";
        "..........";
        "#....#.#.#";
        "#.....#..#";
        "##..#..#..";
        "...#..#..#";
        "..#....#..";
        "......#...";
        "#..##.....";
        ".#....##.#";
    ]);
    (1693, [
        "#.###..###";
        "#...#...##";
        "#......###";
        "#....#...#";
        "......#..#";
        "###...#...";
        "####..##..";
        "...#..#...";
        "##..##.###";
        "#....#.##.";
    ]);
    (3631, [
        "....#.##..";
        "..#...#...";
        "#.###..#..";
        "....#.#..#";
        "#..#..##..";
        "#....#.#..";
        "#.##..#...";
        "#........#";
        ".....#...#";
        "...#......";
    ]);
    (2999, [
        "#...###..#";
        "#.#.##....";
        "#.........";
        "##.......#";
        "#.#.##.###";
        ".....##.##";
        ".#.##..##.";
        "#...###.##";
        ".#.....#..";
        "..#.#.###.";
    ]);
    (2417, [
        "..#.#.#...";
        "##.#..#.##";
        "#.##....#.";
        "#.........";
        "...#..#...";
        ".#...#.###";
        ".#.###...#";
        "#........#";
        "#.#..#....";
        "#.##.#...#";
    ]);
    (3919, [
        "##........";
        "#.#.......";
        ".#.#.#....";
        "...#...#.#";
        "...#...##.";
        "##.....###";
        "#.#.#.#...";
        "###.#.....";
        ".#.#..#.##";
        "##.#...##.";
    ]);
    (3557, [
        "##.#.###..";
        ".##...#..#";
        ".#.#...#..";
        "....###...";
        ".....#####";
        "###.#....#";
        ".#..##..#.";
        "#..#....#.";
        "..........";
        "....###.#.";
    ]);
    (3851, [
        ".##.###.##";
        "..#......#";
        "......#..#";
        "#.#.......";
        "......##..";
        "##...#....";
        "..#..#...#";
        "...#.#....";
        ".........#";
        ".#.##..###";
    ]);
    (1013, [
        "##.##.##..";
        "##........";
        "...#......";
        "#.....#...";
        "#.#..#...#";
        ".#......##";
        "...##.#.##";
        "..#..##..#";
        ".#...#..#.";
        "..#..###.#";
    ]);
    (1549, [
        "..#...##.#";
        "..#......#";
        "##....#.#.";
        ".......##.";
        "..#...#..#";
        "#.#..#..##";
        ".......#.#";
        ".......#.#";
        "#...##...#";
        ".######...";
    ]);
    (2179, [
        ".##.##.#..";
        ".##.###...";
        ".........#";
        "..#..#..#.";
        "..#####...";
        "...#..#..#";
        "...#....##";
        "#........#";
        "#.........";
        "###.###...";
    ]);
    (1697, [
        "###..###.#";
        "##...#....";
        "####...#.#";
        ".#.....##.";
        "....####.#";
        "#....##.##";
        "..#.##...#";
        ".........#";
        "###..##.##";
        "#..##.####";
    ]);
    (1307, [
        "##......#.";
        "..........";
        "....#....#";
        "#...#.#.#.";
        ".###.....#";
        "#..##.#..#";
        "..........";
        ".....##.#.";
        "...####..#";
        "..#..#.#..";
    ]);
    (3929, [
        "###.#.##..";
        "##........";
        "###....###";
        "...#..#..#";
        "...#.....#";
        "..#.###...";
        "..........";
        ".....#...#";
        "#.......##";
        "##....#.#.";
    ]);
    (1949, [
        "..####.#.#";
        ".#..#...#.";
        "#..#....##";
        "#.....###.";
        ".........#";
        "..#..#...#";
        ".....##...";
        ".....#....";
        ".#.#.#.#..";
        "####.#####";
    ]);
    (2081, [
        "##.##.####";
        ".#........";
        "#...#.....";
        ".#.##..#.#";
        "....###..#";
        "..#..#.#..";
        "#.#.#.##.#";
        "..#..#..#.";
        "#...#.#...";
        ".##.#.####";
    ]);
    (1433, [
        "#####.##..";
        "#.....#...";
        "####..#...";
        "...####...";
        "......#.##";
        "..##...#..";
        "#...#.#.#.";
        "#....#..#.";
        "#......#.#";
        "##..###..#";
    ]);
    (3433, [
        "#.......##";
        "#....#....";
        "#...#.#..#";
        "..#.##...#";
        "#...##.#.#";
        "##.####..#";
        "..##.###.#";
        "#.#....#..";
        "##.#.....#";
        ".#....#..#";
    ]);
    (3607, [
        "##.#.#.#.#";
        "...#..#.#.";
        "#.#..#.#..";
        "#.......##";
        "..#..##...";
        "#.....#...";
        "#...#..#.#";
        "...#....##";
        "#..#..#.##";
        "##.#..#.#.";
    ]);
    (2677, [
        ".###..#..#";
        "###......#";
        "..........";
        "##..#...#.";
        "##...#.#..";
        "..#.......";
        "#...#...#.";
        "#......#.#";
        "##.#.#.#.#";
        "###...#...";
    ]);
    (3461, [
        "...##...##";
        "#.#...##.#";
        "#.....##..";
        "#..#....##";
        "#.#....#.#";
        "..##.##.#.";
        "#.........";
        "..#.#....#";
        "#....##...";
        ".#.##.####";
    ]);
    (3911, [
        "#.#####.##";
        "#..#.....#";
        "#..#......";
        ".##....##.";
        "#..#..#..#";
        ".....#.#.#";
        "#.......##";
        "......#...";
        "####...##.";
        "..#..#.#..";
    ]);
    (2729, [
        "##..##.##.";
        ".#..#...#.";
        "#....###..";
        ".....##...";
        "#..#..#..#";
        "....###..#";
        "#....##.##";
        "#..#.###..";
        "#.....#...";
        "...##.#...";
    ]);
    (2549, [
        ".#.##.#...";
        "#..#.#.#.#";
        ".........#";
        ".#..##..##";
        "#....##...";
        "##..#.##.#";
        ".#...##...";
        "#...#.....";
        "..#.......";
        "#....#....";
    ]);
    (1699, [
        ".######..#";
        "....###..#";
        ".####..#..";
        "#....#....";
        ".##.#...#.";
        "#.......#.";
        ".#.#.##..#";
        "#..#......";
        "..........";
        "#.##..##..";
    ]);
    (2221, [
        "#...##.#..";
        "....#....#";
        "#...#....#";
        "#........#";
        "#.......##";
        "##.#..#...";
        "#.#.###..#";
        "#..#.....#";
        "......#.##";
        "..#.####.#";
    ]);
    (2129, [
        "....#####.";
        ".##..#...#";
        "......#.##";
        "#.#...#...";
        "#..#...###";
        "###.#..#..";
        ".....#...#";
        "...#......";
        "#...#.#...";
        "#.###.###.";
    ]);
    (1973, [
        ".......###";
        "..........";
        "#.#.#.....";
        ".........#";
        "....#..#..";
        "...#...#..";
        "##.....#.#";
        "#..#...#.#";
        "#.#......#";
        "#...#.#.##";
    ]);
    (3943, [
        "...###....";
        "........##";
        ".##.......";
        "##.#....##";
        "..#.#..#..";
        "..##...#..";
        "#.##....#.";
        ".#####.#..";
        "###..##.#.";
        "...#..#.##";
    ]);
    (1451, [
        "#..###..#.";
        "#..#....##";
        "....#...##";
        "##.......#";
        "#.........";
        "..........";
        "...#...#..";
        "..#....##.";
        "...#..#.#.";
        ".##...##.#";
    ]);
    (1759, [
        ".#..##...#";
        "##........";
        "##..#.....";
        "..........";
        ".###...###";
        "..##..#..#";
        ".......###";
        "#..#..#..#";
        ".##....#..";
        "...##.#..#";
    ]);
    (2963, [
        "##.##.#.#.";
        "....#.....";
        "#.....##.#";
        ".##.#..#.#";
        ".###..#.#.";
        "#.##.##...";
        "....#....#";
        "#.....#...";
        ".#.##.###.";
        ".#..#.....";
    ]);
    (3313, [
        "#.#...#...";
        "..##..#..#";
        "#####.##.#";
        "#.....##.#";
        "..#..##..#";
        "##.###....";
        "...#.#....";
        ".......#.#";
        "##.....##.";
        "#.#.#####.";
    ]);
    (3221, [
        ".#...##...";
        "#.##...###";
        "####...##.";
        ".##.......";
        "##..#...#.";
        "...#.#.###";
        "#...##..#.";
        "##...#..#.";
        "#.#...##..";
        "##...#.##.";
    ]);
    (3989, [
        "###...#.##";
        "#.......##";
        "#.......#.";
        "#...#....#";
        "#.........";
        "...#.##...";
        "..#....#..";
        "..........";
        ".#......#.";
        "#.##.###..";
    ]);
    (2069, [
        "#..#..##.#";
        "#.####....";
        "#..#......";
        "#..##..#.#";
        "#......###";
        "#...#.....";
        "#...#..###";
        "......##..";
        "#..#.####.";
        "#.#..#..#.";
    ]);
    (1871, [
        "#.##..####";
        ".#.##....#";
        "###.#.#..#";
        "#....#...#";
        "......#.##";
        "#.....####";
        "#.....##.#";
        "#...#....#";
        "....#.....";
        ".......#.#";
    ]);
    (2083, [
        ".#.##.#...";
        "#..####..#";
        "##.#.##.##";
        "..#.##....";
        "#.#..##...";
        "..#.#..#..";
        "...#..#...";
        ".#..#.##..";
        "###..#.###";
        "#...#.#...";
    ]);
    (2309, [
        ".##.#...#.";
        "#..##..#.#";
        "...#......";
        ".#..#.....";
        "#..##...##";
        ".#...#...#";
        "...#.#....";
        ".....##...";
        "#.##....##";
        "...##..###";
    ]);
    (3413, [
        ".....####.";
        "..#.###...";
        "..#.#....#";
        "##.##.....";
        "..##...###";
        "##..#.....";
        "##.#.....#";
        "###.######";
        "#..##.....";
        "#.#...#.#.";
    ]);
    (1039, [
        "#.##.#.#..";
        "#...#.#...";
        "...####.#.";
        "..#..#.#.#";
        "...#.##..#";
        "#...###..#";
        "....#..#..";
        "##....##.#";
        ".#...#....";
        "#...#.#..#";
    ]);
    (2029, [
        "##..##.#..";
        "#.........";
        "#..#......";
        ".##.......";
        ".....#..#.";
        ".##..##...";
        "......#...";
        "#....#.#.#";
        "..##.#....";
        "...#.#.#..";
    ]);
    (2281, [
        "######.##.";
        "#...##....";
        "......#.#.";
        "##..#.##..";
        "#..####.##";
        "#....#.#.#";
        "#........#";
        "........##";
        ".##....##.";
        "..###.....";
    ]);
    (3259, [
        "#...##.#.#";
        "...#....#.";
        "..#.#...#.";
        "###.......";
        ".####.#.##";
        "#..#...#.#";
        "#....#.##.";
        "#..###..#.";
        "#.###..#.#";
        "#.#...###.";
    ]);
    (2087, [
        "###.###.#.";
        "#.........";
        "#.......#.";
        "##....####";
        "#.##...#..";
        "#..##.#.##";
        ".##...#...";
        ".##..#..#.";
        "#.....#...";
        "##..#.#...";
    ]);
    (3391, [
        ".##.#.#..#";
        "##.#.#...#";
        "#..#......";
        "...#......";
        "#..#......";
        "..........";
        "...###...#";
        ".........#";
        "##..#....#";
        "..#.#....#";
    ]);
    (2693, [
        "#...#.##..";
        "#..##....#";
        ".#.#....#.";
        "#.#.#...#.";
        "#.##.....#";
        "...#......";
        "..#.#.##.#";
        "#.......#.";
        "...#.....#";
        "..###..##.";
    ]);
    (1279, [
        "#.#.....##";
        ".........#";
        "#.#..#.#.#";
        "#..#.....#";
        "#..#......";
        "###.....##";
        ".###...#.#";
        "#.##.....#";
        "#.##......";
        ".#..####..";
    ]);
    (2459, [
        "####...#.#";
        "#.#....#.#";
        "#........#";
        ".#........";
        "##......#.";
        "#...#.#..#";
        "###....#..";
        "..##.##..#";
        "#.#.....##";
        "#.#.#.....";
    ]);
    (2297, [
        ".##.####..";
        "#...#...##";
        "##........";
        ".##...#.#.";
        ".....#.#.#";
        "#........#";
        "......#.#.";
        "#...#...##";
        "#.#.....##";
        ".##..##..#";
    ]);
    (3217, [
        ".##..##..#";
        "#...#.#...";
        ".#.##.#...";
        "##.##....#";
        "#...##..##";
        "..###...#.";
        ".........#";
        "#..#.#....";
        ".#..#...##";
        "#....##..#";
    ]);
    (2467, [
        "#.#.##.###";
        ".....#...#";
        ".#........";
        "#...##.###";
        ".#.......#";
        "#...#.##.#";
        "#....#....";
        "#...#....#";
        "...##.##.#";
        "....#..#.#";
    ]);
    (2939, [
        "##.###.#..";
        "...#..#..#";
        ".#..##....";
        "#.#.......";
        "##....#...";
        ".##...##..";
        "##.#.....#";
        "#..#..#.##";
        "..........";
        "###..##.##";
    ]);
    (1459, [
        "#.#.##.###";
        "..##.#...#";
        "#..#.#.##.";
        "#....###..";
        "##...#...#";
        ".##.#.....";
        ".##.#.##..";
        "#.....#..#";
        "#.#.##....";
        "..#....##.";
    ]);
    (3583, [
        ".#..#.#.##";
        "#..###.#.#";
        ".#....#...";
        ".#.##....#";
        "...#.....#";
        "...#.#...#";
        "....###...";
        ".....#....";
        "..#.......";
        ".#.#.###..";
    ]);
    (3209, [
        "#.#.######";
        ".#....#.#.";
        "..#.......";
        "#.#.....##";
        "#..#.....#";
        ".#.......#";
        "#.##.#....";
        "....##....";
        ".#.##.#.#.";
        "#...#.#...";
    ]);
    (1471, [
        "#.###..##.";
        "........##";
        ".#....##..";
        "####.#...#";
        "...#......";
        "#....#....";
        "#.....#.#.";
        "#.#......#";
        "##.#.##..#";
        ".#.#.###.#";
    ]);
    (3533, [
        "....#..#.#";
        "###...#...";
        "..#.#..#..";
        "...#..#...";
        "#.#.#..#.#";
        ".#..##..#.";
        "#..#.....#";
        ".....#.#.#";
        "........##";
        "..#.#.##.#";
    ]);
    (2389, [
        ".....##...";
        "..#....#.#";
        "....#...#.";
        "#.....#...";
        "#..#....##";
        "#.#.#.....";
        "#........#";
        "#.........";
        "....#.#...";
        "....##..##";
    ]);
    (3023, [
        "....#.###.";
        "#...#.#.##";
        "#.#.#.....";
        "#..#.#..##";
        "....#....#";
        "....######";
        "#...#.....";
        ".#....#.##";
        "#......#..";
        "#.##...##.";
    ]);
    (1367, [
        ".#...###..";
        "#...##.##.";
        ".#.....#.#";
        ".#...#...#";
        "####.#....";
        ".##.......";
        ".#.....#..";
        "...#.....#";
        "..#......#";
        "###..#..#.";
    ]);
    (1789, [
        ".##..#..##";
        "....#.##..";
        ".####.....";
        "#...###..#";
        "#..#..###.";
        ".##.#.....";
        "..#.##....";
        ".....#....";
        ".......#..";
        ".#..##....";
    ]);
    (3011, [
        "#.###..#.#";
        ".....#...#";
        "...#..#..#";
        "#.###..#..";
        "#..#.#..##";
        "..##......";
        ".#...#...#";
        "...#..#...";
        ".#.###...#";
        ".#.##.....";
    ]);
    (3547, [
        ".###.#...#";
        ".##....#..";
        "...#.##.##";
        "#.#.......";
        ".......#.#";
        "......#..#";
        "#..#...#..";
        "...#.####.";
        "#....##.#.";
        "....#.##..";
    ]);
    (3671, [
        "##.#..#.#.";
        "##..##.#.#";
        "...###....";
        "#.#.###..#";
        "#..#...#..";
        "..#......#";
        "#.#...####";
        ".....#...#";
        ".#...##..#";
        "..###..#..";
    ]);
    (3529, [
        "#.#.#..#.#";
        "##.....#..";
        ".##..#....";
        "#.#....###";
        "#.##.#..##";
        "#....#.#.#";
        ".....###.#";
        "....#..#.#";
        ".#..#....#";
        ".###..##..";
    ]);
    (2251, [
        ".####.#.##";
        "#.....#...";
        ".#...#.#.#";
        "...##.....";
        "##.......#";
        ".....#....";
        "...##....#";
        "#..#..#...";
        "#########.";
        "#.........";
    ]);
    (2927, [
        ".#...#####";
        ".###..#...";
        "...#...#..";
        "##.#...##.";
        "...#.....#";
        "#.###...##";
        ".....#..#.";
        "#....###.#";
        "#........#";
        ".##..##...";
    ]);
    (3467, [
        "#...#.#.##";
        ".....#....";
        "...###..##";
        "#...#.#...";
        "...#.#.#..";
        "....#.....";
        ".....#.#..";
        "..#.#...#.";
        ".....##...";
        "#..#..#...";
    ]);
    (2341, [
        "#.......##";
        "..##..#.#.";
        ".....##..#";
        "#..###.#..";
        "...##.....";
        "##..#..#.#";
        "###..#.#.#";
        ".#..#..###";
        "...#..##..";
        ".#.#...###";
    ]);
    (1847, [
        "#..##..###";
        "#....#.#.#";
        ".#..###...";
        "#....#...#";
        "#.#..##..#";
        "##.####...";
        "#.#.......";
        "..........";
        ".#..#...##";
        "##..#..##.";
    ]);
    (1597, [
        "#.#.#....#";
        "#......###";
        ".#..#....#";
        ".#....####";
        "#.#..#..##";
        "#...#..#.#";
        "#.##.##..#";
        "###...#...";
        "#..##.#...";
        ".###..#.#.";
    ]);
    (2789, [
        ".#####.#..";
        "....#.....";
        ".........#";
        "#.##....#.";
        "..#.#.#...";
        "#...##....";
        "#..#...#.#";
        "#..#.....#";
        ".....#....";
        ".#..####.#";
    ]);
    (2441, [
        "##.#.#....";
        "#.#.......";
        ".#...###..";
        "..#....##.";
        ".......#.#";
        ".......#..";
        ".#...##..#";
        "####......";
        "##..#....#";
        "##.##.###.";
    ]);
    (1303, [
        ".##...#...";
        "#........#";
        "###....#.#";
        ".....#....";
        ".....#....";
        "#.....#..#";
        ".........#";
        ".####.#..#";
        "..##...###";
        "####..###.";
    ]);
    (2339, [
        "..#..##.##";
        "...#....##";
        "##.#.#....";
        "#..##.##.#";
        ".####..#.#";
        "#.........";
        ".#...#..#.";
        "......#..#";
        "#..###...#";
        ".##..#.#.#";
    ]);
    (3079, [
        "####...#.#";
        "...###..##";
        ".........#";
        ".##....#..";
        "##..#..#..";
        "...#..##.#";
        "#.#....#..";
        "##........";
        "#.#.####..";
        "###.#.#..#";
    ]);
    (1877, [
        "..#.#.#..#";
        "#.#.#.#...";
        "#....##...";
        "..##.#..##";
        "##.#..#...";
        "#..#......";
        "#...#.#..#";
        ".....###.#";
        "..#..##..#";
        "########.#";
    ]);
    (2663, [
        "##.##....#";
        "#......##.";
        "#.#...#..#";
        "##.###....";
        "##..#.#.##";
        "#...#..#..";
        "#..#....#.";
        "..#.#...##";
        "#..##...##";
        ".....###.#";
    ]);
    (1109, [
        "###....##.";
        "#........#";
        "#.........";
        "...#..####";
        "..##..##.#";
        ".....##..#";
        ".#...#.#.#";
        "#...#...##";
        "..........";
        "...#.#.###";
    ]);
    (2971, [
        "...##.####";
        "#..#....##";
        "#...#.#.#.";
        "#...#.##.#";
        "...#.....#";
        ".#........";
        "#.....#.#.";
        ".#####.#.#";
        "##..#...#.";
        "###.#..#.#";
    ]);
    (2053, [
        ".###.###..";
        "####.#..##";
        "..#...##..";
        "##....##.#";
        "#.#..#.###";
        "..#.......";
        ".#.##...#.";
        "#...##..##";
        "..#...#..#";
        "#.#....###";
    ]);
    (2647, [
        ".###.#.###";
        "#........#";
        "#....#..##";
        "........#.";
        "##....##.#";
        "##....##..";
        "....#..#.#";
        "...#.....#";
        "##.......#";
        "##.#...#.#";
    ]);
    (1423, [
        "####.#....";
        "#.....#...";
        "#.#....#.#";
        "...#.....#";
        "..#.......";
        "#.#.......";
        "##..#....#";
        "##.##.#...";
        "#...#.....";
        "...#.##.##";
    ]);
    (2767, [
        "..#.##..##";
        "#...#..#.#";
        "#.#....#..";
        "#.......#.";
        ".......#..";
        ".#...#.#.#";
        ".##.#..#..";
        ".....##..#";
        "#.......##";
        "##....####";
    ]);
    (2203, [
        ".#...##.##";
        "#.##...#.#";
        ".#........";
        "...#.##..#";
        "###....###";
        ".#.....#.#";
        "#.#.##...#";
        "...#.#.#..";
        ".....#....";
        "#.####.##.";
    ]);
    (1667, [
        "....#.##.#";
        "#..#...#..";
        ".#...#...#";
        ".#........";
        ".#........";
        "...#.....#";
        "..#..#...#";
        "##...####.";
        ".#.....#..";
        "#..#......";
    ]);
    (2633, [
        ".#.#######";
        "#..###....";
        "........#.";
        "#.........";
        ".....##.#.";
        "#.#......#";
        "#.#.......";
        "..##.....#";
        "....##....";
        ".#..####.#";
    ]);
    (3539, [
        "####.##..#";
        "..##....#.";
        "..#.#.##.#";
        "...#.....#";
        "#.........";
        ".......#.#";
        "...#....#.";
        "###..####.";
        ".##......#";
        "..#..#####";
    ]);
    (2381, [
        ".######...";
        "##..###...";
        "#......#.#";
        "........##";
        ".#.....#.#";
        "##..##...#";
        ".#.......#";
        "#.........";
        "...##....#";
        "....##...#";
    ]);
    (1153, [
        "..##.##..#";
        ".....##.#.";
        ".....##...";
        "..#.....##";
        "##.#..#...";
        "#.....#..#";
        "#....#..#.";
        "#....#.#..";
        "..#..#..#.";
        ".#.##.....";
    ]);
    (2011, [
        "#.##..#...";
        "#.##.....#";
        "...#..#...";
        "###.......";
        "#....#..#.";
        "..##......";
        "##..#..#..";
        "..##....##";
        "#..#..#...";
        "##.####..#";
    ]);
    (2731, [
        "........#.";
        "#........#";
        "##.#.....#";
        "#.....##..";
        "#.....#...";
        "#.#......#";
        "...#.###.#";
        "#.#.#....#";
        ".#.#...#.#";
        "#...###..#";
    ]);
    (3643, [
        ".#...#.###";
        "..#...#..#";
        "#....##..#";
        "...##.#.#.";
        ".#.....#..";
        "...#.##..#";
        ".####.##..";
        "#..#..####";
        "....#....#";
        "####.####.";
    ]);
    (2917, [
        "..########";
        "#......#.#";
        "#..#.#..##";
        "#...#...##";
        "#..##....#";
        "...#..#...";
        "..#......#";
        "...#...#.#";
        "#.....#..#";
        ".#.#..####";
    ]);
    (1951, [
        "#.#.#..##.";
        "..........";
        "..#.#.#.##";
        "#.#.......";
        ".#..#...##";
        "...##..#.#";
        "#...#..#..";
        ".#..#.....";
        "#.#.....##";
        ".#####....";
    ]);
    (2593, [
        "..#####.#.";
        ".#...#....";
        "##..###..#";
        "###.##..##";
        ".#....##.#";
        ".#..##....";
        "#.#..#..##";
        ".....#....";
        ".....#...#";
        ".####..#..";
    ]);
    (2953, [
        "..#..#.#.#";
        "...#..#...";
        "##.....#.#";
        "......#..#";
        "#........#";
        "..#..#...#";
        "#.........";
        "###.#.##..";
        "##..#..#..";
        ".###.#..#.";
    ]);
    (3769, [
        "......#...";
        ".#.##.#...";
        ".##......#";
        "##........";
        "#.....###.";
        "....#...#.";
        "..........";
        "#.....#.##";
        "..........";
        ".##..##.##";
    ]);
    (2423, [
        "####..#.##";
        ".#..##....";
        "#.#.#.....";
        ".........#";
        "..........";
        "..#..#....";
        ".#.#..#..#";
        "#.........";
        "#..#..#...";
        "##.#......";
    ]);
    (3329, [
        "..#####.#.";
        ".#....##.#";
        "###..#####";
        "##...#...#";
        "#.........";
        "#.........";
        "...#.#...#";
        "....#...##";
        "#...#.#...";
        "#.........";
    ]);
    (1249, [
        "..#..###.#";
        "......#.#.";
        "##...#....";
        "..........";
        "##.......#";
        "#......#.#";
        "#..#.#..##";
        ".#.......#";
        "###....#.#";
        ".##.....#.";
    ]);
    (3343, [
        "##..#...#.";
        "##.#..####";
        "........#.";
        "...#......";
        "......#...";
        "#.....#...";
        ".#.#.#....";
        "......##.#";
        "..#.##...#";
        ".#.#..####";
    ]);
    (2017, [
        "##.##.#.##";
        "...#......";
        ".....##.#.";
        "..#...#...";
        "#.#....#..";
        "#....#...#";
        "#....#...#";
        "#...##....";
        ".....#.#.#";
        "....#.#.#.";
    ]);
    (1151, [
        "##..##....";
        "..##.....#";
        "#.####.##.";
        "...##....#";
        "..##.....#";
        "....#....#";
        ".#.##...##";
        "......#..#";
        "#..#.#.#..";
        "#.###...##";
    ]);
    (3697, [
        "###.....#.";
        "..##...##.";
        "......#.#.";
        ".#...#.#.#";
        ".#...#...#";
        ".#.....#..";
        "#...#.#...";
        "#..#....#.";
        ".#..##...#";
        "..#.#.##..";
    ]);
    (1487, [
        "..#####.##";
        "#.........";
        "#.#...#.##";
        "##.##.....";
        ".##.#....#";
        "..#....###";
        "#.........";
        "..#.......";
        "#.##..#...";
        ".####..##.";
    ]);
    (1481, [
        "..#..#..##";
        "#.#..#.##.";
        "#..##....#";
        "##.....#..";
        ".#...##.##";
        ".#......#.";
        "..#..##...";
        "###...###.";
        "..#...##..";
        "#...##.#..";
    ]);
    (2903, [
        "#..#...###";
        "#..#####.#";
        "..#.......";
        "###..###..";
        ".#........";
        "#.#.#....#";
        "..#..#.###";
        "##..#.##..";
        "...#......";
        ".##.##.#..";
    ]);
    (1171, [
        ".###..####";
        "....#..#..";
        "....#..#.#";
        "#.....##.#";
        "##...##...";
        "#..#.##.#.";
        "##..##...#";
        "#..##.#.#.";
        "#.#..##.#.";
        "##.##....#";
    ]);
    (2621, [
        "#...###.##";
        ".#.....##.";
        ".#..#...#.";
        "...#..#.##";
        ".#..##..#.";
        "##..#..##.";
        "...##...#.";
        ".#..#...##";
        "....#....#";
        "...##.####";
    ]);
    (2671, [
        "...#####..";
        "........##";
        "#....##..#";
        "##........";
        "##..##.#..";
        "..#.....#.";
        "#.........";
        "..##.....#";
        "##....#.##";
        "###.#...##";
    ]);
    (2357, [
        ".##.##....";
        "#...#....#";
        "...##..#.#";
        "#.##...#..";
        "##.###..##";
        "..#..#####";
        "...#.###.#";
        "...##....#";
        "..#.####.#";
        "#..##..###";
    ]);
    (3617, [
        "...##.#...";
        "#####..#.#";
        "....#....#";
        "......#..#";
        "#...#.....";
        "...##....#";
        "....#.....";
        "#..#...##.";
        "#...#...#.";
        "....##...#";
    ]);
    (3517, [
        "#.#..#..#.";
        "#......#.#";
        ".#.#..#.##";
        "...##...#.";
        "#.##..##..";
        "...#..#.##";
        "#...#.##..";
        ".#..#..#.#";
        "....#...##";
        "..###.###.";
    ]);
    (1499, [
        ".#..#....#";
        "...#.##..#";
        "#...#..#..";
        "..##...#..";
        "#....#.#.#";
        "#..#.#..##";
        "##.##..#.#";
        ".##.#..#.#";
        "#.###..##.";
        "##.##.#.#.";
    ]);
    (3581, [
        "###.#.###.";
        ".#..#....#";
        "###....##.";
        "..#.#...##";
        "##..#..#..";
        ".....##...";
        "........#.";
        ".#.....##.";
        "#.#...##..";
        "###.#.#..#";
    ]);
    (2687, [
        ".#####...#";
        ".......#..";
        ".#..#....#";
        "...#......";
        "##....#..#";
        "#.#..#..#.";
        "##..#.#.#.";
        "..#....###";
        ".#........";
        "#...#..#..";
    ]);
    (1657, [
        "...#...#.#";
        ".#.##.#..#";
        "....#...#.";
        "...##.##..";
        "....#.#.##";
        "#..#..#.#.";
        "...#.#.#..";
        "...##....#";
        "#...#.#..#";
        ".##.##...#";
    ]);
    (3449, [
        "#.....###.";
        "#..#.....#";
        "#......##.";
        "....#.....";
        "##....#...";
        ".....#...#";
        "..........";
        "#......###";
        ".#....#...";
        "###...#...";
    ]);
    (3797, [
        "#.#######.";
        "..#.##.###";
        "...#.#...#";
        "##.##.##.#";
        "#.......#.";
        ".#......##";
        "##...#####";
        "..#.##.###";
        "#.#.##...#";
        "##..#.#.#.";
    ]);
    (1511, [
        "#.###.###.";
        ".##.#....#";
        "........##";
        "##..#..#..";
        "..#####.##";
        ".....#....";
        ".......#..";
        "...#......";
        "##........";
        "...#.#####";
    ]);
    (2311, [
        "..#.####..";
        "......#..#";
        ".###..#.#.";
        "##..#.###.";
        "...#...#..";
        ".......###";
        "##.#......";
        ".####...##";
        "##.##..###";
        "#...#..###";
    ]);
    (1123, [
        ".##.##....";
        "#....##...";
        "#..#.....#";
        "#........#";
        "....#.....";
        "#...##.#.#";
        "#.#.##..##";
        "...#...##.";
        "#..#...#..";
        "##.#.#.###";
    ])];;

let solve input =
    let join sep =
        List.fold_left (fun a s -> a ^ sep ^ s) "" in

    let print_list lst =
        print_char '[';
        print_string (join " " (List.map string_of_int lst));
        print_char ']' in

    let tr_char c =
        match c with
        | '.' -> '0'
        | '#' -> '1'
        | x -> raise (Invalid_argument (Char.escaped x)) in

    let translate_row str =
        let bin = String.map tr_char str in
        let rev_bin = String.rev bin in
        [int_of_string ("0b" ^ bin); int_of_string ("0b" ^ rev_bin)] in

    let translate_column grid col =
        let col_str = String.implode (List.map (fun str -> String.get str col) grid) in
        let bin = String.map tr_char col_str in
        let rev_bin = String.rev bin in
        [int_of_string ("0b" ^ bin); int_of_string ("0b" ^ rev_bin)] in

    let translate_grid grid =
        let top = translate_row (List.hd grid) in
        let bottom = translate_row (List.nth grid ((List.length grid) - 1)) in
        let left = translate_column grid 0 in
        let right = translate_column grid (String.length (List.hd grid) - 1) in

        let ret = List.concat [top; right; bottom; left] in
        print_list ret;
        print_newline ();
        ret in

    let translate_input input =
        List.map (fun (id, grid) -> printf "Translate: %d\n" id; (id, translate_grid grid)) input in

    let translated_input = translate_input input in

    let combine_images images =
        [""] in

    let make_image_map _ =
        List.fold_left
                (fun ret (id, edges) -> BatMap.add id edges ret)
                BatMap.empty translated_input in

    let find_edge image_map edge =
        let rec do_find binding_list =
            match binding_list with
            | [] -> raise (Invalid_argument ("Edge not found " ^ (string_of_int edge)))
            | (id, edge_list) :: rest ->
                match BatList.index_of edge edge_list with
                | None -> do_find rest
                | Some(idx) -> (id, idx) in

        do_find (BatMap.bindings image_map) in

    let get_and_rotate image_id rotate_count =
        List.assoc image_id translated_input in (* TODO: rotate *)

    let rotate_pos edge_pos rotate_count =
        (edge_pos + rotate_count) mod 8 in

    let rotate_starting_corner corner image_map =
        let exists_edge edge image_map =
            BatEnum.exists (fun edges -> BatList.exists ((=) edge) edges) (BatMap.values image_map) in

        let corner_edges = BatMap.find corner image_map in
        let without_corner = BatMap.remove corner image_map in
        let (idx, _) = BatList.findi
                (fun idx edge -> exists_edge edge without_corner)
                corner_edges in
        rotate_pos idx 6 in

    let make_composite_image image_dim starting_corner =
        let rec make_row_rest image_map left_edge =
            (image_map, []) in (*TODO*)

        let make_row image_map first_up_edge =
            printf "Make row, %d (%d left)\n" first_up_edge (BatMap.cardinal image_map);
            let (first_id, first_pos) = find_edge image_map first_up_edge in
            let first_edges = BatMap.find first_id image_map in
            printf "  First: %d, %d\n" first_id first_pos;
            let first_img = get_and_rotate first_id first_pos in
            let (next_image_map, image_list) =
                    make_row_rest (BatMap.remove first_id image_map) (rotate_pos first_pos 2) in
            let first_down_pos = rotate_pos first_pos 4 in
            let next_edge = BatList.nth first_edges first_down_pos in
            (next_image_map, next_edge, []) in

        let rec rearrange_images image_map top_left_edge count =
            if count = 0 then
                []
            else
                let (next_image_map, next_top_left, row) = make_row image_map top_left_edge in
                let rest = rearrange_images next_image_map next_top_left (count - 1) in
                row :: rest in

        (* TODO: rotate first element so that the top element actually connects to something. *)
        printf "\n\nMAKE COMPOSITE\n\n";
        let image_map = make_image_map () in
        let starting_rotation = rotate_starting_corner starting_corner image_map in
        printf "Starting rotation = %d\n" starting_rotation;
        let starting_edges = BatMap.find starting_corner image_map in
        let starting_up_edge = List.nth starting_edges starting_rotation in
        let images = rearrange_images image_map starting_up_edge image_dim in
        combine_images images in

    let serialize_image composite =
        List.fold_left (^) "" composite in

    let make_monster_regexp xdim =
        Str.regexp "foo" in

    let marks_in_monster = 15 in

    let count_monsters str regexp =
        10 in

    let count_marks str =
        10 in

    let count_neighbours (id, edges) =
        let is_neighbour (other_id, other_edges) =
            id <> other_id && List.exists (fun e -> List.exists ((=) e) other_edges) edges in

        let neighbour_list = List.filter is_neighbour translated_input in
        printf "%d -> " id;
        print_list (List.map (fun (id, _) -> id) neighbour_list);
        print_newline ();
        (id, List.length neighbour_list) in

    let neighbours = List.map count_neighbours translated_input in
    let corners = List.filter (fun (_, count) -> count = 2) neighbours in
    let (starting_corner, _) = List.hd corners in
    printf "Starting corner = %d\n" starting_corner;
    let image_dim = int_of_float (sqrt (float_of_int (List.length translated_input))) in
    printf "Image dimensions: %d x %d\n" image_dim image_dim;

    let composite = make_composite_image image_dim starting_corner in
    let composite_str = serialize_image composite in
    let monster_regexp = make_monster_regexp (String.length (List.hd composite)) in
    let monster_count = count_monsters composite_str monster_regexp in
    let total_count = count_marks composite_str in
    total_count - (monster_count * marks_in_monster)
;;

printf "Result = %d\n" (solve input_test);;
